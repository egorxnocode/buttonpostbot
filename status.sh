#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Telegram –±–æ—Ç–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ health check
check_health() {
    local url="http://localhost:8080/health"
    local response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$url" 2>/dev/null || echo "HTTPSTATUS:000")
    local body=$(echo "$response" | sed -E 's/HTTPSTATUS\:[0-9]{3}$//')
    local status=$(echo "$response" | tr -d '\n' | sed -E 's/.*HTTPSTATUS:([0-9]{3})$/\1/')
    
    if [ "$status" -eq 200 ]; then
        echo -e "${GREEN}‚úÖ Health check: OK${NC}"
        return 0
    else
        echo -e "${RED}‚ùå Health check: FAILED (HTTP $status)${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–º—è—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
check_memory() {
    local stats=$(docker stats telegram-bot --no-stream --format "table {{.MemUsage}}\t{{.MemPerc}}" 2>/dev/null | tail -n 1)
    if [ -n "$stats" ]; then
        echo -e "${CYAN}üíæ Memory: $stats${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–∞–º—è—Ç–∏${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CPU
check_cpu() {
    local cpu=$(docker stats telegram-bot --no-stream --format "table {{.CPUPerc}}" 2>/dev/null | tail -n 1)
    if [ -n "$cpu" ]; then
        echo -e "${CYAN}‚ö° CPU: $cpu${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É CPU${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ uptime
check_uptime() {
    local started=$(docker inspect telegram-bot --format='{{.State.StartedAt}}' 2>/dev/null)
    if [ -n "$started" ]; then
        local started_unix=$(date -d "$started" +%s 2>/dev/null || date -jf "%Y-%m-%dT%H:%M:%S" "$started" +%s 2>/dev/null)
        local current_unix=$(date +%s)
        local uptime_seconds=$((current_unix - started_unix))
        local uptime_human=$(printf '%dd %dh %dm %ds' $((uptime_seconds/86400)) $((uptime_seconds%86400/3600)) $((uptime_seconds%3600/60)) $((uptime_seconds%60)))
        echo -e "${PURPLE}‚è∞ Uptime: $uptime_human${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤
check_recent_logs() {
    echo -e "${BLUE}üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:${NC}"
    docker-compose logs --tail=5 telegram-bot 2>/dev/null | sed 's/^/  /' || echo -e "${RED}  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏${NC}"
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
echo -e "${BLUE}"
echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó"
echo "‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù"
echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë"
echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

echo -e "${BLUE}ü§ñ –°—Ç–∞—Ç—É—Å Telegram –±–æ—Ç–∞${NC}"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
if ! docker ps -a --format "table {{.Names}}" | grep -q "telegram-bot"; then
    echo -e "${RED}‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä telegram-bot –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: ./start.sh${NC}"
    exit 1
fi

# –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
echo -e "${BLUE}üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:${NC}"
container_status=$(docker inspect telegram-bot --format='{{.State.Status}}' 2>/dev/null)

case $container_status in
    "running")
        echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å: –ó–∞–ø—É—â–µ–Ω${NC}"
        ;;
    "exited")
        echo -e "${RED}‚ùå –°—Ç–∞—Ç—É—Å: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        exit_code=$(docker inspect telegram-bot --format='{{.State.ExitCode}}' 2>/dev/null)
        echo -e "${RED}   Exit code: $exit_code${NC}"
        echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: ./start.sh${NC}"
        exit 1
        ;;
    "restarting")
        echo -e "${YELLOW}üîÑ –°—Ç–∞—Ç—É—Å: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è${NC}"
        ;;
    *)
        echo -e "${RED}‚ùå –°—Ç–∞—Ç—É—Å: $container_status${NC}"
        exit 1
        ;;
esac

# –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω)
if [ "$container_status" = "running" ]; then
    echo ""
    echo -e "${BLUE}üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
    check_health
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Å—É—Ä—Å—ã
    check_memory
    check_cpu
    check_uptime
    
    echo ""
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
    check_recent_logs
    
    echo ""
    echo -e "${BLUE}üåê –°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:${NC}"
    echo -e "${CYAN}üì° Webhook URL: http://localhost:8080${NC}"
    echo -e "${CYAN}üîó Health check: http://localhost:8080/health${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã
    if command -v netstat &> /dev/null; then
        if netstat -tlnp 2>/dev/null | grep -q ":8080"; then
            echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç 8080: –û—Ç–∫—Ä—ã—Ç${NC}"
        else
            echo -e "${RED}‚ùå –ü–æ—Ä—Ç 8080: –ó–∞–∫—Ä—ã—Ç${NC}"
        fi
    fi
fi

echo ""
echo -e "${BLUE}üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º:${NC}"
echo -e "  ${YELLOW}–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:${NC} ./logs.sh"
echo -e "  ${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞:${NC} ./stop.sh"
echo -e "  ${YELLOW}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞:${NC} ./restart.sh"
echo -e "  ${YELLOW}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞:${NC} ./status.sh"

echo ""
echo -e "${GREEN}‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
